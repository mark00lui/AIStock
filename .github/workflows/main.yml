# .github/workflows/daily_report_generator.yml
name: Generate and Deploy Daily Report

on:
  # 每天台灣時間早上 8 點執行 (00:00 UTC)
  # 您可以透過 crontab.guru 網站產生自己想要的時間
  schedule:
    # 台灣時間下午 5:00 (UTC 9:00，當天早上 9 點)
    - cron: '0 9 * * *'
    # 台灣時間早上 5:00 (UTC 21:00，前一天晚上 9 點)
    - cron: '0 21 * * *'
  # 增加手動觸發選項，方便測試
  workflow_dispatch:

jobs:
  build-and-deploy:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      # 步驟 1: 取得您的專案原始碼
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      # 步驟 2: 設定 Python 環境
      - name: Set up Python 🐍
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.5' # 指定您需要的 Python 版本

      # 步驟 3: 安裝專案所需的套件
      # 我看到您的專案中有 requirements.txt，這個指令會自動安裝裡面所有的套件
      - name: Install dependencies 📦
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 步驟 4: 執行您的 Python 主程式
      # *** 請將 Main.py 換成您專案的實際啟動檔名 ***
      - name: Run script to generate report 🚀
        run: |
          python main.py \
            [重倉股-AI及SOC] NVDA AMD MU TSM PLTR QCOM 2454.TW 2330.TW 2308.TW 6805.TW \
            [重倉股-AI雲] AMZN MSFT GOOGL META BABA BIDU NBIS CRWV \
            [重倉股-網路安全] CSCO PANW FTNT CRWD \
            [Q4上漲-代工] SMCI 2317.TW 6669.TW 3231.TW 2382.TW 3706.TW 2376.TW 2357.TW \
            [抱5年-ASIC] AVGO MRVL 3661.TW  \
            [抱5年-特斯拉機器人及飛行器] TSLA RKLB 3019.TW 6215.TW 4571.TW 3362.TW 2359.TW \
            [高危險-矽光子] 2345.TW 6223.TW 3081.TW 3363.TW 3450.TW 4979.TW 3163.TW \
            [長期不振-半導體代理商] 8299.TW 8112.TW \
            [慢成長-蘋概股] AAPL 3008.TW 2392.TW 6197.TW \
            [高度不定性-傳統醫療及AI醫療] UNH TEM HIMS UNCY \
            [高度不定性-能源股] LEU CVX VST SMR OKLO \
            [年初買六月賣-航海王] 2603.TW 2615.TW \
            [金融及穩定幣等AI金融] BAC JPM V MA SOFI COIN CRCL 2881.TW 2882.TW 2891.TW 3988.HK MSTR SBET BMNR MARA \
            --save-daily-report \
            --GEMINI-API ${{ secrets.GEMINI_API_KEY }}

      # 步驟 5: 準備發佈內容
      - name: Prepare deployment files 📂
        run: |
          # 尋找今天產生的報告檔案
          report_file=$(find . -maxdepth 1 -name "*_report.html" -print -quit)
          
          if [ -z "$report_file" ]; then
            echo "::error::Report file not found!"
            exit 1
          fi
          
          echo "Found report: $report_file"
          
          # 建立一個臨時的發佈目錄
          mkdir -p deploy
          
          # 將最新的報告複製一份並命名為 latest_report.html
          cp "$report_file" deploy/latest_report.html
          
          # 建立 reports 資料夾並將原始報告移入
          mkdir -p deploy/reports
          mv "$report_file" deploy/reports/

      # 步驟 6: 將產生的檔案發佈到 gh-pages 分支
      - name: Deploy to GitHub Pages 🚀
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 指定要發佈的是我們剛剛建立的 deploy 資料夾
          publish_dir: ./deploy
          # 持續將更新推送到 gh-pages 分支
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: "Docs: Deploy daily report"
